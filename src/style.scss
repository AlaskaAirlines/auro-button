// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

/* stylelint-disable
   at-rule-no-unknown,
   comment-empty-line-before,
   scss/dollar-variable-colon-space-after,
   scss/dollar-variable-empty-line-before,
   scss/dollar-variable-first-in-block,
   scss/dollar-variable-pattern,
   color-function-notation,
   scss/selector-nest-combinators,
   selector-class-pattern,
   selector-attribute-quotes,
   no-descending-specificity,
   max-nesting-depth,
   declaration-empty-line-before,
   property-no-vendor-prefix,
   selector-max-class,
   no-duplicate-selectors,
   selector-max-attribute,
   selector-max-pseudo-class,
   selector-not-notation
   */

// Import Auro Sass variables
@import "./../node_modules/@aurodesignsystem/design-tokens/dist/tokens/SCSSVariables";

// general WCSS imports
@import "./../node_modules/@aurodesignsystem/webcorestylesheets/src/breakpoints";
@import "./../node_modules/@aurodesignsystem/webcorestylesheets/src/core";
@import "./../node_modules/@aurodesignsystem/webcorestylesheets/src/animation";

@import "./../node_modules/@aurodesignsystem/design-tokens/dist/tokens/SCSSVariableMap";

$auro-inset-spacing-options: lg;
$auro-inset-directions:'--squish';

@import "./../node_modules/@aurodesignsystem/webcorestylesheets/src/utilityMixins/insetUtility";

:host([fluid]),
:host([fluid=true]) {
  .auro-button {
    min-width: auto;
    width: 100%;
  }
}

:host([variant='flat']) {
  display:inline-block;
  height: var(--ds-size-300, $ds-size-300);
  width: var(--ds-size-300, $ds-size-300);

  .auro-button {
    height: 100%;
    width: 100%;
  }
}

// adjust alignment for slotted SVG icon
::slotted(svg) {
  vertical-align: middle;
}

// Note: without this, events on a disabled element will still fire
slot {
  pointer-events: none;
}

// Button styles
.auro-button {
  position: relative;

  padding: 0 var(--ds-size-300, $ds-size-300);

  cursor: pointer;
  border-width: 1px;
  border-style: solid;
  border-radius: var(--ds-border-radius, $ds-border-radius);

  font-family: var(--ds-font-family-default, $ds-font-family-default);
  font-size: var(--ds-text-body-size-default, $ds-text-body-size-default);
  font-weight: var(--ds-text-body-default-weight, $ds-text-body-default-weight);
  overflow: hidden;
  text-overflow: ellipsis;
  user-select: none;
  white-space: nowrap;

  min-height: var(--ds-size-600, $ds-size-600);
  max-height: var(--ds-size-600, $ds-size-600);

  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: var(--ds-size-100, $ds-size-100);

  // removes margins around button in Safari
  margin: 0;

  // macOS / iOS agents
  -webkit-touch-callout: none;
  -webkit-user-select: none;

  // handle active state
  &:active {
    transform: scale(0.95);
  }

  &:focus-visible {
    &:not([variant='secondary']):not([variant='tertiary']):not([variant='flat']) {
      &:after {
        display: block;
        content: '';
        height: calc(100% - 2px);
        width: calc(100% - 2px);
        position: absolute;
        top: 1px;
        left: 1px;
        border-radius: 4px;
        border-style: solid;
        border-width: 2px;
      }
    }

    &[variant='secondary'],
    &[variant='tertiary'] {
      &:after {
        display: block;
        content: '';
        height: 100%;
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        border-radius: var(--ds-border-radius, $ds-border-radius);
        border-style: solid;
        border-width: 2px;
      }
    }
  }

  &.loading {
    cursor: not-allowed;

    *:not([auro-loader]) {
      visibility: hidden;
    }
  }

  @include auro_grid-breakpoint--sm {
    min-width: 8.75rem;
    width: auto;
  }

  &:disabled {
    cursor: not-allowed;
    transform: unset;
  }

  &[variant='secondary'] {
    &:disabled {
      cursor: not-allowed;
      transform: unset;
    }
  }

  &[variant='tertiary'] {
    &:disabled {
      cursor: not-allowed;
      transform: unset;
    }
  }

  &[variant='flat'] {
    height: unset;
    width: unset;
    min-height: unset;
    max-height: unset;
    min-width: unset;
    max-width: unset;
    border: 0;
    border-radius: unset;
    gap: unset;
    padding: unset;
  }

  &[onDark] {
    &:disabled {
      cursor: not-allowed;
      transform: unset;
    }

    &[variant='secondary'] {
      &:disabled {
        cursor: not-allowed;
        transform: unset;
      }
    }

    &[variant='tertiary'] {
      @media (hover: hover) {
        &:active,
        &:hover {
          box-shadow: none;
        }
      }

      &:active {
        box-shadow: none;
      }

      &:disabled {
        cursor: not-allowed;
        transform: unset;
      }
    }
  }

  // auro-button--slim
  &--slim {
    padding: var(--ds-size-100, $ds-size-100) var(--ds-size-200, $ds-size-200);
    font-size: var(--ds-text-body-size-sm, $ds-text-body-size-sm);
    min-width: unset;
    min-height: calc(var(--ds-size-500, $ds-size-500) - var(--ds-size-50, $ds-size-50));
    max-height: calc(var(--ds-size-500, $ds-size-500) - var(--ds-size-50, $ds-size-50));
  }

  // auro-button--iconOnly
  &--iconOnly {
    ::slotted(auro-icon),
    ::slotted([auro-icon]) {
      --ds-auro-icon-size: var(--ds-size-300, $ds-size-300);
    }

    padding: 0 var(--ds-size-100, $ds-size-100);

    border-radius: 100px;
    min-width: unset;

    height: var(--ds-size-600, $ds-size-600);
    width: var(--ds-size-500, $ds-size-500);
  }

  // auro-button--iconOnlySlim
  &--iconOnlySlim {
    ::slotted(auro-icon),
    ::slotted([auro-icon]) {
      --ds-auro-icon-size: calc(var(--ds-size-200, $ds-size-200) + var(--ds-size-50, $ds-size-50));
    }

    padding: 0 var(--ds-size-50, $ds-size-50);

    height: calc(var(--ds-size-400, $ds-size-400) + var(--ds-size-50, $ds-size-50));
    width: calc(var(--ds-size-300, $ds-size-300) + var(--ds-size-50, $ds-size-50));
  }

  // auro-button--rounded
  &--rounded {
    border-radius: 100px;
    box-shadow: var(--ds-elevation-300, $ds-elevation-300);

    height: var(--ds-size-500, $ds-size-500);
    min-width: unset;

    transition: all 300ms ease-out;

    ::slotted(auro-icon),
    ::slotted([auro-icon]) {
      --ds-auro-icon-size: var(--ds-size-300, $ds-size-300);
    }
  }
}


:host([rounded]) {
  .textSlot {
    transition: opacity 300ms ease-in;
    opacity: 1;
  }
}

:host([rounded][iconOnly]) {
  .textSlot {
    opacity: 0;
  }

  .textWrapper {
    display: none;
  }

  .auro-button {
    min-width: unset;
    padding: unset;

    width: var(--ds-size-600, $ds-size-600);
  }
}

[auro-loader] {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}
